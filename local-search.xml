<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>python2级速通</title>
    <link href="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/"/>
    <url>/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>​本篇笔记是在笔者刷python二级题目的时候，一边刷题一边总结的随笔，希望可以位后续的要备考的同学提供一点微薄的帮助。</p><p>​因为是随手记的，格式和顺序可能会不太完美。</p><h1 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h1><p>主要包括以下内容：</p><ul><li>数据结构与算法</li><li>python基础</li><li>软件测试相关</li><li>数据库设计基础</li><li>软件工程基础</li></ul><p>分值分布：</p><ul><li>算法，软件工程，软件测试，数据库设计（15左右）</li></ul><p>这部分内容，没有学过相关专业的同学死记硬背即可，不用花太多时间在上面，刷题的时候错题标记一下然后再刷一遍错题即可。</p><ul><li>python基础（15左右）</li></ul><p>包括的知识点有，数据类型特点，函数的特点和使用，和对运行流程结果的判断，这部分内容就不要死记硬背了，这部分内容要结合做操作题的经验，理解性记忆。</p><p>在做判断运行流程结果的题目时，注意以下几点:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-number">1.</span><span class="hljs-built_in">input</span>()函数返回的是字符串，他在对返回的数据处理时有没有进行转换。<br><span class="hljs-number">2.</span>考察输出结果时，一定要看清楚输出的是什么，如果<span class="hljs-built_in">print</span>()里面是个函数，就注意看函数有没有返回值,返回值是什么数据类型。<br><span class="hljs-number">3.</span>注意代码缩进层次结构，哪些代码会被运行，哪些不会，要捋清楚，他经常会写一些不会被运行的部分来迷惑你。<br></code></pre></td></tr></table></figure><p>其他的内容，像什么做什么需要哪个函数，在什么什么情况该用哪个语句，这些题目不需要花时间去刷，你在刷后面操作题的时候这些内容都已经理解记忆在脑子里了。</p><ul><li>pyhon背景和生态（10左右）</li></ul><p>就是问哪些第三方库是干什么的，在哪个领域有哪些库支持</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">开发用户界面(GUI):pyGTK,pygobject，PyQt<br>数据分析:seabom,mayavi2,numpy,scipy,pandas,matplotlib<br>web开发:pyramid,flask,django<br>文本处理:pdfminer,openpyxl<br>游戏开发:pygame<br>图像处理:PIL,Arcade<br>机器学习:mxnet,Tensorflow,PyTorch,Scikit-learn<br>网络爬虫:scrapy,requests<br>用来安装第三方库的工具是pip，把py脚本打包成可执行文件的是pyinstaller<br></code></pre></td></tr></table></figure><p>其次就是python作为一个解释性语言的一些特点，和静态编译语言的一些区别对照之类的</p><p><strong>选择题一定要保证在25分以上</strong> ！！</p><h1 id="操作题"><a href="#操作题" class="headerlink" title="操作题"></a>操作题</h1><h2 id="三个模块："><a href="#三个模块：" class="headerlink" title="三个模块："></a>三个模块：</h2><ul><li>基础操作：主要考点，格式化输出，对结构控制语句的掌握</li><li>简单应用：turtle库，列表，字典的处理，排序,文件读取写入</li><li>综合应用：文件读取写入，内容遍历，排序。在简单应用基础上增加要求</li></ul><h2 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h2><ul><li><p>{:&lt;填充&gt;&lt;对齐&gt;&lt;宽度&gt;&lt;,(千分位分隔符)&gt;&lt;.精度&gt;&lt;类型&gt;}</p></li><li><p>&lt;左对齐   &gt;右对齐  ^居中对齐</p></li><li><p>.2f 两位小数</p></li><li><p>x 十六进制输出 b二进制 d十进制 o八进制</p></li></ul><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325134853630.png" alt="image-20230325134853630"></p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325134937908.png" alt="image-20230325134937908"></p><p>false：</p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325134942614.png" alt="image-20230325134942614"></p><p>true：(细节就是多了一个空格….挺无语的避免细节扣分)</p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325134950746.png" alt="image-20230325134950746"></p><p>例题1：</p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325135059119.png" alt="image-20230325135059119"></p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325135103898.png" alt="image-20230325135103898"></p><ul><li><p>中文字符取值范围：’\ue400’ 到’\u9fff’</p></li><li><p>大写方法name.upper(),小写name.lower()</p></li></ul><p>例题2:</p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325135110219.png" alt="image-20230325135110219"></p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325135114557.png" alt="image-20230325135114557"></p><p>例题3:</p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325135118525.png" alt="image-20230325135118525"></p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">list</span>.sort( key=<span class="hljs-literal">None</span>, reverse=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325135123564.png" alt="image-20230325135123564"></p><p>lambda:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python">L=[(<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-number">2</span>),(<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-number">1</span>),(<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-number">3</span>),(<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-number">4</span>)]<br><span class="hljs-comment">#2、利用参数 cmp 排序</span><br><span class="hljs-built_in">sorted</span>(L, cmp=<span class="hljs-keyword">lambda</span> x,y:cmp(x[<span class="hljs-number">1</span>],y[<span class="hljs-number">1</span>]))<br> 结果：<br>[(<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>), (<span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">2</span>), (<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-number">3</span>), (<span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-number">4</span>)]<br><span class="hljs-comment">#3、利用参数 key 排序</span><br><span class="hljs-built_in">sorted</span>(L, key=<span class="hljs-keyword">lambda</span> x:x[<span class="hljs-number">1</span>])<br><span class="hljs-comment">#结果：</span><br>[(<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1</span>), (<span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">2</span>), (<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-number">3</span>), (<span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-number">4</span>)]<br><span class="hljs-comment">#4、按年龄升序</span><br>students = [(<span class="hljs-string">&#x27;john&#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-number">15</span>), (<span class="hljs-string">&#x27;jane&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-number">12</span>), (<span class="hljs-string">&#x27;dave&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-number">10</span>)]<br><span class="hljs-built_in">sorted</span>(students, key=<span class="hljs-keyword">lambda</span> s: s[<span class="hljs-number">2</span>])<br> 结果：<br>[(<span class="hljs-string">&#x27;dave&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-number">10</span>), (<span class="hljs-string">&#x27;jane&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-number">12</span>), (<span class="hljs-string">&#x27;john&#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-number">15</span>)]<br><span class="hljs-comment">#5、按年龄降序</span><br><span class="hljs-built_in">sorted</span>(students, key=<span class="hljs-keyword">lambda</span> s: s[<span class="hljs-number">2</span>], reverse=<span class="hljs-literal">True</span>)<br><span class="hljs-comment">#结果：</span><br>[(<span class="hljs-string">&#x27;john&#x27;</span>, <span class="hljs-string">&#x27;A&#x27;</span>, <span class="hljs-number">15</span>), (<span class="hljs-string">&#x27;jane&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-number">12</span>), (<span class="hljs-string">&#x27;dave&#x27;</span>, <span class="hljs-string">&#x27;B&#x27;</span>, <span class="hljs-number">10</span>)]<br><br></code></pre></td></tr></table></figure><h2 id="计数排序问题"><a href="#计数排序问题" class="headerlink" title="计数排序问题"></a>计数排序问题</h2><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325135128947.png" alt="image-20230325135128947"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"> D[vote[:-<span class="hljs-number">1</span>]]=D.get(vote[:-<span class="hljs-number">1</span>],<span class="hljs-number">0</span>)+<span class="hljs-number">1</span><br>        NUM+=<span class="hljs-number">1</span><br>l = <span class="hljs-built_in">list</span>(D.items())<br>l.sort(key=<span class="hljs-keyword">lambda</span> s:s[<span class="hljs-number">1</span>],reverse=<span class="hljs-literal">True</span>)<br><br></code></pre></td></tr></table></figure><p>例题4：</p><p><img src="/2023/03/25/python%E4%BA%8C%E7%BA%A7%E9%80%9F%E9%80%9A/image-20230325135134747.png" alt="image-20230325135134747"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">img = [<span class="hljs-number">0.244</span>, <span class="hljs-number">0.832</span>, <span class="hljs-number">0.903</span>, <span class="hljs-number">0.145</span>, <span class="hljs-number">0.26</span>, <span class="hljs-number">0.452</span>]<br><span class="hljs-built_in">filter</span> = [<span class="hljs-number">0.1</span>,<span class="hljs-number">0.8</span>,<span class="hljs-number">0.1</span>]<br>res = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(img)-<span class="hljs-number">2</span>):<br>    k=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>        k += <span class="hljs-built_in">filter</span>[j]*img[i+j]<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;k=&#123;:.3f&#125;,filter[&#123;&#125;]=&#123;:.3f&#125;,img[&#123;&#125;+&#123;&#125;]=&#123;:.3f&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(k,j,<span class="hljs-built_in">filter</span>[j],i,j,img[i+j]))<br>    res.append(k)<br><span class="hljs-keyword">for</span> r <span class="hljs-keyword">in</span> res:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;:&lt;10.3f&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(r),end = <span class="hljs-string">&#x27;&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>开始半天没看懂这纱暖题目什么吊意思，大概就是说，要算四个向量内积，从lt1的第一个元素开始，然后还要把计算过程打印出来。挺nt的就是说。专门标注一下。</p><h2 id="turtle库"><a href="#turtle库" class="headerlink" title="turtle库"></a>turtle库</h2><p>常用方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">turtle.fd(&lt;前进多少个单位&gt;)<span class="hljs-comment">#前进</span><br>turtle.seth()<span class="hljs-comment">#调整方向</span><br><span class="hljs-comment">#seth(90)就是从逆时针调整九十度，seth(-90)就是顺时针</span><br><span class="hljs-comment">#相当于以当前位置为原点画一个坐标轴</span><br>turtle.penup()<span class="hljs-comment">#提起笔:动时不会有痕迹</span><br>turtle.pendown()<span class="hljs-comment">#落笔:移动时候开始有痕迹</span><br>turtle.pencolor()<span class="hljs-comment">#调整画笔颜色</span><br>turtle.circle()<span class="hljs-comment">#画圆，参数是半径</span><br></code></pre></td></tr></table></figure><h2 id="jieba库"><a href="#jieba库" class="headerlink" title="jieba库"></a>jieba库</h2><p>常用的就一条：</p><p><code>s.lcut(str)</code></p><p>用来将一个字符串里分词，返回的数据是一个列表</p><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作:"></a>文件操作:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;文件名&#x27;</span>，<span class="hljs-string">&#x27;打开模式&#x27;</span>)<span class="hljs-comment">#r模式是读，w模式是写</span><br><span class="hljs-comment">#这个时候f作为对象名字，调用方法时用f.方法名(参数)</span><br>f.read()<br><span class="hljs-comment">#读取文件内容，返回字符串，如果是b模式（二进制模式）打开，就是二进制数据内容，一般打开图片的时候采用b模式,二级题目里基本都是读取文本内容然后处理</span><br>f.readlines()<span class="hljs-comment">#按行读取，返回的是一个列表，每一行对应列表里一个元素</span><br>f.readline()<span class="hljs-comment">#只读取一行</span><br>f.write()<span class="hljs-comment">#写入内容</span><br></code></pre></td></tr></table></figure><p>一般文件操作都会配合for循环使用，因为大部分的题目都是让你在文本里筛选出符合条件的内容，一般流程如下：</p><ol><li>打开文件后读取所有行<code>readlines</code></li><li>然后<code>for ... in ...:</code>去遍历每一行的内容</li><li>再用if语句判断具体条件</li><li>然后执行下一步操作，计数或者写入</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/25/hello-world/"/>
    <url>/2023/03/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
